// Not total the same as SRGAN in <Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network>
{
  "name": "P41_ESRGAN_ALL_L1_x5_PREUP_FT_StanData" //  please remove "debug_" during training
  , "use_tb_logger": true
  , "model":  "srragan" // "srragan_residual - srragan -  srgan"
  , "scale": 5
  , "gpu_ids": [0]

  , "datasets": {
    "train": {
      "name": "GDAL"  
      , "mode": "NoUpsamplingGDAL_PretrainRGB_ALL" //"GDAL_5x"
      , "data_IDs": "/mnt/gpid07/users/luis.salgueiro/datasets/bandas_all.csv"
      , "dataroot_HR": "/mnt/gpid07/users/luis.salgueiro/datasets/"
      , "dataroot_LR": "/mnt/gpid07/users/luis.salgueiro/datasets/"
      , "subset_file": null
      , "use_shuffle": true
      , "n_workers": 1
      , "batch_size": 2
      , "HR_size": 128
      , "use_flip": true
      , "use_rot": true
      , "stand": true
      , "LR_down": false // downsampling HR image by scale factor to form LR image
      , "PreUP": true
      , "norm" : false
      , "up_lr": false
      , "HF": false
      , "scale": 5

    }
    , "val": {
      "name": "val_GDAL"
      , "mode": "NoUpsamplingGDAL_PretrainRGB_ALL"//"GDAL_5x"
      , "data_IDs": "/mnt/gpid07/users/luis.salgueiro/datasets/Valid_set_v2.csv"
      , "dataroot_HR": "/mnt/gpid07/users/luis.salgueiro/datasets/"
      , "dataroot_LR": "/mnt/gpid07/users/luis.salgueiro/datasets/"
      , "HR_size": 128
      , "stand" : true
      , "norm" : false
      , "LR_down": false
      , "PreUP": true
      , "up_lr": false
      , "HF": false
      , "scale": 5

    }
  }

   , "path": {
    "root":"/imatge/lsalgueiro/git/mnt/BasicSR"
    ,  "work_root": "/mnt/gpid07/users/luis.salgueiro/git/mnt/BasicSR_2020/"   // WORK-> gpid07
  , "resume_state": "/mnt/gpid07/users/luis.salgueiro/git/mnt/BasicSR_2020/experiments/P41_ESRGAN_ALL_L1_x5_PREUP_FT_StanData/training_state/80000.state"
// , "pretrain_model_G": "/mnt/gpid07/users/luis.salgueiro/git/mnt/BasicSR_2020/experiments/P40_SRResNet_ESRGAN_ALL_L1_x5_PREUP_FT_StanData/models/100000_G.pth"
    
}

  , "network_G": {
    "which_model_G": "RRDB_net" // RRDB_net(PreUP) | RRDBNet_orig_5x | sr_resnet sr_resnet_noup
    , "norm_type": null  // null, batch, instance
    , "mode": "CNA"
    , "nf": 64
    , "nb": 23
    , "in_nc": 4
    , "out_nc":4
  }
  , "network_D": {
    "which_model_D": "discriminator_vgg_128"
    , "norm_type": null//"batch"
    , "act_type": "leakyrelu"
    , "mode": "CNA"
    , "nf": 64
    , "in_nc": 3
  }

  , "train": {
    "lr_G": 1e-4
    , "weight_decay_G": 0
    , "beta1_G": 0.9
    , "lr_D": 1e-4
    , "weight_decay_D": 0
    , "beta1_D": 0.9
    , "lr_scheme": "MultiStepLR"
    , "lr_steps": [20000,40000,60000,80000] //[50000, 100000, 200000, 300000]
    , "lr_gamma": 0.5

    , "pixel_criterion": "l1"
    , "pixel_weight": 1e-2  // weight for feature_criterion def=1e-2
    , "feature_criterion": "l1" //
    , "feature_weight": 1  // weight for VGG def=1
    , "gan_type": "vanilla" //, "lsgan", "wgan-gp" vanilla
    , "gan_weight": 5e-3  // weight for gan_type def 5e-3

    //for wgan-gp
    // , "D_update_ratio": 1
    // , "D_init_iters": 0
    // , "gp_weigth": 10

    , "manual_seed": 100
    , "niter":101000 //5e5
    , "val_freq": 10000 //   5e3  #EPOCHS
  }

  , "logger": {
    "print_freq": 100
    , "save_checkpoint_freq": 10000 //5e3
  }
}
